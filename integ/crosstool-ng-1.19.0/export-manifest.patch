This patch gives crosstool-NG the ability to export source code packages of the
target system C library and Linux kernel, and all patches applied to them.
This helps automate getting source; very useful for for GPL compliance when
delivering systems that have the cross-tool chain glibc.
Fri Jan  3 19:02:57 MST 2014

scripts: Add the ability to export target source and patches.

Signed-off-by: Douglas Jerome <djerome@crosslinux.org>

diff -Naur a/config/global/manifest.in b/config/global/manifest.in
--- a/config/global/manifest.in	1969-12-31 17:00:00.000000000 -0700
+++ b/config/global/manifest.in	2014-01-03 17:58:52.301773042 -0700
@@ -0,0 +1,15 @@
+# Options specific to extracting packages
+
+comment "Target Manifest"
+
+config TARGET_MANIFEST
+    bool
+    prompt "Create a manifest of target components"
+    default n
+    help
+      Copy the source target components to a taget manifest directory in the
+      target toolchain directory.  This is only for the target components that
+      end up in the tool-chain sysroot.
+
+      This is intended to make it easy to get the toolchain target sysroot
+      source components and their patches.
diff -Naur a/config/global.in b/config/global.in
--- a/config/global.in	2013-10-02 11:06:22.000000000 -0700
+++ b/config/global.in	2014-01-03 17:59:26.088350651 -0700
@@ -13,5 +13,6 @@
 source "config/global/extract.in"
 source "config/global/build-behave.in"
 source "config/global/logging.in"
+source "config/global/manifest.in"
 
 endmenu
diff -Naur a/scripts/build/kernel/linux.sh b/scripts/build/kernel/linux.sh
--- a/scripts/build/kernel/linux.sh	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/build/kernel/linux.sh	2014-01-03 18:01:02.054150914 -0700
@@ -49,6 +49,7 @@
             2.6.*)  rel_dir=v2.6;;
             3.*)    rel_dir=v3.x;;
         esac
+        CT_DoEnableTargetManifestEntry "linux" "${CT_MANIFEST_DIR}"
         korg_base="http://ftp.kernel.org/pub/linux/kernel/${rel_dir}"
         CT_GetFile "linux-${CT_KERNEL_VERSION}"         \
                    "${korg_base}"                       \
@@ -78,6 +79,7 @@
     if [ "${CT_KERNEL_LINUX_CUSTOM}" = "y" ]; then
         return 0
     fi
+    CT_DoEnableTargetManifestEntry "linux-patch" "${CT_MANIFEST_DIR}/linux-patch"
     CT_Patch "linux" "${CT_KERNEL_VERSION}"
 }
 
diff -Naur a/scripts/build/libc/eglibc.sh b/scripts/build/libc/eglibc.sh
--- a/scripts/build/libc/eglibc.sh	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/build/libc/eglibc.sh	2014-01-03 18:01:52.903515209 -0700
@@ -103,6 +103,7 @@
 # Extract the files required for the libc locales
 do_libc_locales_extract() {
     CT_Extract "eglibc-localedef-${CT_LIBC_VERSION}"
+    CT_DoEnableTargetManifestEntry "eglibc-patch" "${CT_MANIFEST_DIR}/eglibc-patch"
     CT_Patch "eglibc" "localedef-${CT_LIBC_VERSION}"
 }
 
diff -Naur a/scripts/build/libc/glibc-eglibc.sh-common b/scripts/build/libc/glibc-eglibc.sh-common
--- a/scripts/build/libc/glibc-eglibc.sh-common	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/build/libc/glibc-eglibc.sh-common	2014-01-03 18:02:47.148837049 -0700
@@ -7,6 +7,7 @@
     # Extract the main tarball
     CT_Extract "${CT_LIBC}-${CT_LIBC_VERSION}"
     CT_Pushd "${CT_SRC_DIR}/${CT_LIBC}-${CT_LIBC_VERSION}"
+    CT_DoEnableTargetManifestEntry "glibc-patch" "${CT_MANIFEST_DIR}/glibc-patch"
     CT_Patch nochdir "${CT_LIBC}" "${CT_LIBC_VERSION}"
 
     # Extract the add-opns
@@ -34,6 +35,7 @@
 
         CT_DoExecLog FILE ln -s "${addon}" "${CT_LIBC}-${addon}-${CT_LIBC_VERSION}"
 
+        CT_DoEnableTargetManifestEntry "glibc-patch-addon" "${CT_MANIFEST_DIR}/glibc-patch-addon"
         CT_Patch nochdir "${CT_LIBC}" "${addon}-${CT_LIBC_VERSION}"
 
         # Remove the long name since it can confuse configure scripts to run
diff -Naur a/scripts/build/libc/glibc.sh b/scripts/build/libc/glibc.sh
--- a/scripts/build/libc/glibc.sh	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/build/libc/glibc.sh	2014-01-03 18:43:06.299593503 -0700
@@ -19,6 +19,7 @@
     addons_list=($(do_libc_add_ons_list " "))
 
     # Main source
+    CT_DoEnableTargetManifestEntry "glibc" "${CT_MANIFEST_DIR}"
     CT_GetFile "glibc-${CT_LIBC_VERSION}"               \
                {ftp,http}://ftp.gnu.org/gnu/glibc       \
                ftp://gcc.gnu.org/pub/glibc/releases     \
@@ -32,6 +33,7 @@
             nptl)   continue;;
         esac
 
+        CT_DoEnableTargetManifestEntry "glibc_${addon}" "${CT_MANIFEST_DIR}"
         if ! CT_GetFile "glibc-${addon}-${CT_LIBC_VERSION}"     \
                         {ftp,http}://ftp.gnu.org/gnu/glibc      \
                         ftp://gcc.gnu.org/pub/glibc/releases    \
diff -Naur a/scripts/build/libc/mingw.sh b/scripts/build/libc/mingw.sh
--- a/scripts/build/libc/mingw.sh	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/build/libc/mingw.sh	2014-01-03 18:44:15.565727557 -0700
@@ -2,6 +2,7 @@
 # Licensed under the GPL v2. See COPYING in the root of this package
 
 do_libc_get() { 
+    CT_DoEnableTargetManifestEntry "mingw-w64" "${CT_MANIFEST_DIR}"
     CT_GetFile "mingw-w64-v${CT_WINAPI_VERSION}" \
         http://downloads.sourceforge.net/sourceforge/mingw-w64
 }
@@ -9,6 +10,7 @@
 do_libc_extract() {
     CT_Extract "mingw-w64-v${CT_WINAPI_VERSION}"
     CT_Pushd "${CT_SRC_DIR}/mingw-w64-v${CT_WINAPI_VERSION}/"
+    CT_DoEnableTargetManifestEntry "mingw-w64-patch" "${CT_MANIFEST_DIR}/mingw-w64-patch"
     CT_Patch nochdir mingw-w64 "${CT_WINAPI_VERSION}"
     CT_Popd
 }
diff -Naur a/scripts/build/libc/newlib.sh b/scripts/build/libc/newlib.sh
--- a/scripts/build/libc/newlib.sh	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/build/libc/newlib.sh	2014-01-03 18:45:49.247556373 -0700
@@ -15,11 +15,13 @@
         CT_GetCustom "newlib" "${CT_LIBC_VERSION}"      \
                      "${CT_LIBC_NEWLIB_CUSTOM_LOCATION}"
     else # ! custom location
+        CT_DoEnableTargetManifestEntry "newlib" "${CT_MANIFEST_DIR}"
         CT_GetFile "newlib-${CT_LIBC_VERSION}" ${libc_src} \
             http://mirrors.kernel.org/sources.redhat.com/newlib
     fi # ! custom location
 
     if [ "${CT_ATMEL_AVR32_HEADERS}" = "y" ]; then
+        CT_DoEnableTargetManifestEntry "avr32headers" "${CT_MANIFEST_DIR}/"
         CT_GetFile ${avr32headers_base} ${avr32headers_ext} ${avr32headers_src}
     fi
 }
@@ -32,6 +34,7 @@
     fi
 
     CT_Extract "newlib-${CT_LIBC_VERSION}"
+    CT_DoEnableTargetManifestEntry "newlib-patch" "${CT_MANIFEST_DIR}/newlib-patch"
     CT_Patch "newlib" "${CT_LIBC_VERSION}"
 
     if [ "${CT_ATMEL_AVR32_HEADERS}" = "y" ]; then
diff -Naur a/scripts/build/libc/uClibc.sh b/scripts/build/libc/uClibc.sh
--- a/scripts/build/libc/uClibc.sh	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/build/libc/uClibc.sh	2014-01-03 19:00:20.365665898 -0700
@@ -15,10 +15,12 @@
         CT_GetCustom "uClibc" "${CT_LIBC_VERSION}" \
                      "${CT_LIBC_UCLIBC_CUSTOM_LOCATION}"
     else
+        CT_DoEnableTargetManifestEntry "uclibc" "${CT_MANIFEST_DIR}"
         CT_GetFile "uClibc-${CT_LIBC_VERSION}" ${libc_src}
     fi
     # uClibc locales
     if [ "${CT_LIBC_UCLIBC_LOCALES_PREGEN_DATA}" = "y" ]; then
+        CT_DoEnableTargetManifestEntry "uclibc-locales" "${CT_MANIFEST_DIR}"
         CT_GetFile "${uclibc_local_tarball}" ${libc_src}
     fi
 
@@ -35,6 +37,7 @@
     if ! [ "${CT_LIBC_UCLIBC_CUSTOM}" = "y" \
          -a -d "${CT_SRC_DIR}/uClibc-${CT_LIBC_VERSION}" ]; then
         CT_Extract "uClibc-${CT_LIBC_VERSION}"
+        CT_DoEnableTargetManifestEntry "uclibc-patch" "${CT_MANIFEST_DIR}/uclibc-patch"
         CT_Patch "uClibc" "${CT_LIBC_VERSION}"
     fi
 
diff -Naur a/scripts/crosstool-NG.sh.in b/scripts/crosstool-NG.sh.in
--- a/scripts/crosstool-NG.sh.in	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/crosstool-NG.sh.in	2014-01-03 18:49:53.940497291 -0700
@@ -185,6 +185,12 @@
         ;;
 esac
 
+# Compute target manifest directory
+if [ "${CT_TARGET_MANIFEST:-}" = "y" ]; then
+    CT_MANIFEST_DIR="${CT_INSTALL_DIR}/_target-source"
+    CT_MANIFEST_FILE="${CT_MANIFEST_DIR}/manifest.txt"
+fi
+
 # Compute test suite install directory
 CT_TEST_SUITE_DIR=${CT_INSTALL_DIR}/test-suite
 
@@ -260,6 +266,10 @@
 CT_DoExecLog ALL mkdir -p "${CT_INSTALL_DIR}"
 CT_DoExecLog ALL mkdir -p "${CT_PREFIX_DIR}"
 CT_DoExecLog ALL mkdir -p "${CT_HOST_COMPLIBS_DIR}"
+if [ "${CT_TARGET_MANIFEST:-}" = "y" ]; then
+   CT_DoExecLog ALL mkdir -p "${CT_MANIFEST_DIR}"
+   CT_DoExecLog ALL touch "${CT_MANIFEST_DIR}/manifest.txt"
+fi
 
 # Only create the state dir if asked for a restartable build
 [ -n "${CT_DEBUG_CT_SAVE_STEPS}" ] && CT_DoExecLog ALL mkdir -p "${CT_STATE_DIR}"
diff -Naur a/scripts/functions b/scripts/functions
--- a/scripts/functions	2013-10-02 11:06:23.000000000 -0700
+++ b/scripts/functions	2014-01-03 18:56:56.362216292 -0700
@@ -511,6 +511,48 @@
     export LD_LIBRARY_PATH
 }
 
+# Enable making one entry in the target manifest.
+# Usage: CT_DoEnableTargetManifestEntry <id name> <directory>
+CT_DoEnableTargetManifestEntry() {
+    if [ "${CT_TARGET_MANIFEST:-}" != "y" ]; then
+        return 0
+    fi
+    CT_MANIFEST_ENTRY="$1"
+    CT_MANIFEST_ENTRY_DIR="$2"
+    if [ ! -d "${CT_MANIFEST_ENTRY_DIR}" ]; then
+        CT_DoExecLog FILE mkdir -p "${CT_MANIFEST_ENTRY_DIR}"
+    fi
+}
+
+CT_DoDisableTargetManifestEntry() {
+    if [ "${CT_TARGET_MANIFEST:-}" != "y" ]; then
+        return 0
+    fi
+    CT_MANIFEST_ENTRY=""
+}
+
+# Make one target manifest entry; disable making more until enabled again.
+# Usage: CT_DoMakeTargetManifestEntry <file> <url> [persist]
+CT_DoMakeTargetManifestEntry() {
+    if [ "${CT_TARGET_MANIFEST:-}" != "y" ]; then
+        return 0
+    fi
+    local file="$1"
+    local url="$2"
+    if [ -n "${CT_MANIFEST_ENTRY:-}" -a -d "${CT_MANIFEST_ENTRY_DIR}" ]; then
+        if [ ! -f "${CT_MANIFEST_FILE}" ]; then
+            CT_DoExecLog FILE touch "${CT_MANIFEST_FILE}"
+        fi
+        CT_DoExecLog FILE cp "${file}" "${CT_MANIFEST_ENTRY_DIR}"
+        echo "${CT_MANIFEST_ENTRY} ${file##*/} ${url}" >>"${CT_MANIFEST_FILE}"
+    fi
+    if [ x"${3:-}" == x"persist" ]; then
+        :
+    else
+        CT_MANIFEST_ENTRY=""
+    fi
+}
+
 # Build up the list of allowed tarball extensions
 # Add them in the prefered order; most preferred comes first
 CT_DoListTarballExt() {
@@ -598,6 +640,7 @@
     # Do we already have it in *our* tarballs dir?
     if ext="$( CT_GetFileExtension "${basename}" ${first_ext} )"; then
         CT_DoLog DEBUG "Already have '${basename}'"
+        CT_DoMakeTargetManifestEntry "${CT_TARBALLS_DIR}/${basename}${ext}" "(local)"
         return 0
     fi
 
@@ -611,6 +654,7 @@
                  "${CT_FORCE_DOWNLOAD}" != "y" ]; then
                 CT_DoLog DEBUG "Got '${basename}' from local storage"
                 CT_DoExecLog ALL ln -s "${CT_LOCAL_TARBALLS_DIR}/${basename}${ext}" "${CT_TARBALLS_DIR}/${basename}${ext}"
+                CT_DoMakeTargetManifestEntry "${CT_TARBALLS_DIR}/${basename}${ext}" "(local)"
                 return 0
             fi
         done
@@ -696,6 +740,7 @@
     # If not allowed to download from the Internet, don't
     if [ "${CT_FORBID_DOWNLOAD}" = "y" ]; then
         CT_DoLog DEBUG "Not allowed to download from the Internet, aborting ${file} download"
+        CT_DoDisableTargetManifestEntry
         return 1
     fi
 
@@ -725,10 +770,12 @@
             if [ -f "${CT_TARBALLS_DIR}/${file}${ext}" ]; then
                 CT_DoLog DEBUG "Got '${file}' from the Internet"
                 CT_SaveLocal "${CT_TARBALLS_DIR}/${file}${ext}"
+                CT_DoMakeTargetManifestEntry "${CT_TARBALLS_DIR}/${file}${ext}" "${url}"
                 return 0
             fi
         done
     done
+    CT_DoDisableTargetManifestEntry
 
     # Just return error, someone may want to catch and handle the error
     # (eg. glibc/eglibc add-ons can be missing).
@@ -1060,6 +1107,7 @@
             for p in "${d}"/*.patch; do
                 if [ -f "${p}" ]; then
                     CT_DoExecLog ALL patch --no-backup-if-mismatch -g0 -F1 -p1 -f -i "${p}"
+                    CT_DoMakeTargetManifestEntry "${p}" "(local)" persist
                 fi
             done
             if [ "${CT_PATCH_SINGLE}" = "y" ]; then
@@ -1067,6 +1115,7 @@
             fi
         fi
     done
+    CT_DoDisableTargetManifestEntry
 
     if [ "${CT_OVERIDE_CONFIG_GUESS_SUB}" = "y" ]; then
         CT_DoLog ALL "Overiding config.guess and config.sub"
